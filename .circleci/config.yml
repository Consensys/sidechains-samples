---
version: 2.1
executors:
  web3j_executor_med: # 2cpu, 4G ram
    docker:
      - image: circleci/openjdk:11.0.4-jdk-stretch
    resource_class: medium
    working_directory: ~/project
    environment:
      GRADLE_OPTS: -Xmx2048m -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2

  web3j_executor_xl: # 8cpu, 16G ram
    docker:
      - image: circleci/openjdk:11.0.4-jdk-stretch
    resource_class: xlarge
    working_directory: ~/project
    environment:
      #GRADLE_OPTS: -Xmx4096m -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=4
      GRADLE_OPTS: -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=4

commands:
  prepare:
    description: "Prepare"
    steps:
      - checkout
      - restore_cache:
          name: Restore cached gradle dependencies
          keys:
            - deps-{{ checksum "build.gradle" }}-{{ .Branch }}-{{ .Revision }}
            - deps-{{ checksum "build.gradle" }}
            - deps-

  capture_test_results:
    description: "Capture test results"
    steps:
      - run:
          name: Gather test results
          when: always
          command: |
            FILES=`find . -name test-results`
            for FILE in $FILES
            do
              MODULE=`echo "$FILE" | sed -e 's@./\(.*\)/build/test-results@\1@'`
              TARGET="build/test-results/$MODULE"
              mkdir -p "$TARGET"
              cp -rf ${FILE}/*/* "$TARGET"
            done
      - store_test_results:
          path: build/test-results

jobs:
  assemble:
    executor: web3j_executor_xl
    steps:
      - prepare
      - run:
          name: Assemble
          command: |
            pushd .
            # Build our Web3j
            cd ..
            git clone https://github.com/PegaSysEng/sidechains-web3j.git
            cd sidechains-web3j
            ./gradlew installDist
            # Build our Besu
            #cd ..
            #git clone https://github.com/PegaSysEng/sidechains-besu.git
            #cd sidechains-besu
            #./gradlew installDist
            # Create sidechains and run them
            # ...
            popd
            ./gradlew --parallel clean compileJava compileTestJava assemble
      - save_cache:
          name: Caching gradle dependencies
          key: deps-{{ checksum "build.gradle" }}-{{ .Branch }}-{{ .Revision }}
          paths:
            - .gradle
            - ~/.gradle
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./
      - store_artifacts:
          name: Distribution artifacts
          path:  build/distributions
          destination: distributions
          when: always

  unitTests:
    executor: web3j_executor_xl
    steps:
      - prepare
      - attach_workspace:
          at: ~/project
      - run:
          name: Build
          no_output_timeout: 20m
          command: |
            ./gradlew --parallel build
      - capture_test_results


workflows:
  version: 2
  default:
    jobs:
      - assemble



