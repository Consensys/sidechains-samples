package tech.pegasys.samples.sidechains.common.coordination.soliditywrappers;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicBytes;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint16;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint32;
import org.web3j.abi.datatypes.generated.Uint64;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple4;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.6.0-SNAPSHOT.
 */
@SuppressWarnings("rawtypes")
public class CrosschainCoordinationV1 extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_GETVERSION = "getVersion";

    public static final String FUNC_GETVOTINGPERIOD = "getVotingPeriod";

    public static final String FUNC_PROPOSEVOTE = "proposeVote";

    public static final String FUNC_IGNORE = "ignore";

    public static final String FUNC_ACTIONVOTES = "actionVotes";

    public static final String FUNC_ADDSIDECHAIN = "addSidechain";

    public static final String FUNC_START = "start";

    public static final String FUNC_GETCROSSCHAINTRANSACTIONSTATUS = "getCrosschainTransactionStatus";

    public static final String FUNC_GETSIDECHAINEXISTS = "getSidechainExists";

    public static final String FUNC_GETBLOCKNUMBER = "getBlockNumber";

    public static final String FUNC_VOTE = "vote";

    public static final String FUNC_GETVERSIONOFPUBLICKEY = "getVersionOfPublicKey";

    public static final String FUNC_ISUNMASKEDSIDECHAINPARTICIPANT = "isUnmaskedSidechainParticipant";

    public static final String FUNC_GETCROSSCHAINTRANSACTIONTIMEOUT = "getCrosschainTransactionTimeout";

    public static final String FUNC_GETPUBLICKEY = "getPublicKey";

    public static final String FUNC_GETMASKEDSIDECHAINPARTICIPANTSSIZE = "getMaskedSidechainParticipantsSize";

    public static final String FUNC_MANAGEMENT_PSEUDO_SIDECHAIN_ID = "MANAGEMENT_PSEUDO_SIDECHAIN_ID";

    public static final String FUNC_GETUNMASKEDSIDECHAINPARTICIPANTSSIZE = "getUnmaskedSidechainParticipantsSize";

    public static final String FUNC_COMMIT = "commit";

    public static final String FUNC_GETUNMASKEDSIDECHAINPARTICIPANT = "getUnmaskedSidechainParticipant";

    public static final String FUNC_GETMASKEDSIDECHAINPARTICIPANT = "getMaskedSidechainParticipant";

    public static final String FUNC_UNMASK = "unmask";

    public static final Event ADDEDSIDECHAIN_EVENT = new Event("AddedSidechain", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event ADDINGSIDECHAINMASKEDPARTICIPANT_EVENT = new Event("AddingSidechainMaskedParticipant", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Bytes32>() {}));
    ;

    public static final Event ADDINGSIDECHAINUNMASKEDPARTICIPANT_EVENT = new Event("AddingSidechainUnmaskedParticipant", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event PARTICIPANTVOTED_EVENT = new Event("ParticipantVoted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Address>() {}, new TypeReference<Uint16>() {}, new TypeReference<Uint256>() {}, new TypeReference<Bool>() {}));
    ;

    public static final Event VOTERESULT_EVENT = new Event("VoteResult", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint16>() {}, new TypeReference<Uint256>() {}, new TypeReference<Bool>() {}));
    ;

    public static final Event DUMP1_EVENT = new Event("Dump1", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event DUMP2_EVENT = new Event("Dump2", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    @Deprecated
    protected CrosschainCoordinationV1(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected CrosschainCoordinationV1(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected CrosschainCoordinationV1(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected CrosschainCoordinationV1(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<BigInteger> getVersion() {
        final Function function = new Function(FUNC_GETVERSION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint16>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getVotingPeriod(BigInteger _sidechainId) {
        final Function function = new Function(FUNC_GETVOTINGPERIOD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sidechainId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> proposeVote(BigInteger _sidechainId, BigInteger _action, BigInteger _voteTarget, BigInteger _additionalInfo1, byte[] _additionalInfo2) {
        final Function function = new Function(
                FUNC_PROPOSEVOTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sidechainId), 
                new org.web3j.abi.datatypes.generated.Uint16(_action), 
                new org.web3j.abi.datatypes.generated.Uint256(_voteTarget), 
                new org.web3j.abi.datatypes.generated.Uint256(_additionalInfo1), 
                new org.web3j.abi.datatypes.DynamicBytes(_additionalInfo2)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> ignore(BigInteger _originatingSidechainId, BigInteger _crosschainTransactionId, byte[] param2) {
        final Function function = new Function(
                FUNC_IGNORE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_originatingSidechainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_crosschainTransactionId), 
                new org.web3j.abi.datatypes.DynamicBytes(param2)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> actionVotes(BigInteger _sidechainId, BigInteger _voteTarget) {
        final Function function = new Function(
                FUNC_ACTIONVOTES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sidechainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_voteTarget)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addSidechain(BigInteger _sidechainId, String _votingAlgorithmContract, BigInteger _votingPeriod, byte[] _publicKey) {
        final Function function = new Function(
                FUNC_ADDSIDECHAIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sidechainId), 
                new org.web3j.abi.datatypes.Address(160, _votingAlgorithmContract), 
                new org.web3j.abi.datatypes.generated.Uint64(_votingPeriod), 
                new org.web3j.abi.datatypes.DynamicBytes(_publicKey)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> start(BigInteger _originatingSidechainId, BigInteger _crosschainTransactionId, byte[] param2, BigInteger _transactionTimeoutBlock) {
        final Function function = new Function(
                FUNC_START, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_originatingSidechainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_crosschainTransactionId), 
                new org.web3j.abi.datatypes.DynamicBytes(param2), 
                new org.web3j.abi.datatypes.generated.Uint256(_transactionTimeoutBlock)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> getCrosschainTransactionStatus(BigInteger _originatingSidechainId, BigInteger _crosschainTransactionId) {
        final Function function = new Function(FUNC_GETCROSSCHAINTRANSACTIONSTATUS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_originatingSidechainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_crosschainTransactionId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint32>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Boolean> getSidechainExists(BigInteger _sidechainId) {
        final Function function = new Function(FUNC_GETSIDECHAINEXISTS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sidechainId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<BigInteger> getBlockNumber() {
        final Function function = new Function(FUNC_GETBLOCKNUMBER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> vote(BigInteger _sidechainId, BigInteger _action, BigInteger _voteTarget, Boolean _voteFor) {
        final Function function = new Function(
                FUNC_VOTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sidechainId), 
                new org.web3j.abi.datatypes.generated.Uint16(_action), 
                new org.web3j.abi.datatypes.generated.Uint256(_voteTarget), 
                new org.web3j.abi.datatypes.Bool(_voteFor)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Tuple4<BigInteger, BigInteger, Boolean, byte[]>> getVersionOfPublicKey(BigInteger _sidechainId, BigInteger _versionNumber) {
        final Function function = new Function(FUNC_GETVERSIONOFPUBLICKEY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sidechainId), 
                new org.web3j.abi.datatypes.generated.Uint64(_versionNumber)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {}, new TypeReference<Uint256>() {}, new TypeReference<Bool>() {}, new TypeReference<DynamicBytes>() {}));
        return new RemoteFunctionCall<Tuple4<BigInteger, BigInteger, Boolean, byte[]>>(function,
                new Callable<Tuple4<BigInteger, BigInteger, Boolean, byte[]>>() {
                    @Override
                    public Tuple4<BigInteger, BigInteger, Boolean, byte[]> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<BigInteger, BigInteger, Boolean, byte[]>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (Boolean) results.get(2).getValue(), 
                                (byte[]) results.get(3).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Boolean> isUnmaskedSidechainParticipant(BigInteger _sidechainId, String _participant) {
        final Function function = new Function(FUNC_ISUNMASKEDSIDECHAINPARTICIPANT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sidechainId), 
                new org.web3j.abi.datatypes.Address(160, _participant)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<BigInteger> getCrosschainTransactionTimeout(BigInteger _originatingSidechainId, BigInteger _crosschainTransactionId) {
        final Function function = new Function(FUNC_GETCROSSCHAINTRANSACTIONTIMEOUT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_originatingSidechainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_crosschainTransactionId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Tuple4<BigInteger, BigInteger, BigInteger, byte[]>> getPublicKey(BigInteger _sidechainId) {
        final Function function = new Function(FUNC_GETPUBLICKEY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sidechainId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint64>() {}, new TypeReference<Uint64>() {}, new TypeReference<Uint256>() {}, new TypeReference<DynamicBytes>() {}));
        return new RemoteFunctionCall<Tuple4<BigInteger, BigInteger, BigInteger, byte[]>>(function,
                new Callable<Tuple4<BigInteger, BigInteger, BigInteger, byte[]>>() {
                    @Override
                    public Tuple4<BigInteger, BigInteger, BigInteger, byte[]> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<BigInteger, BigInteger, BigInteger, byte[]>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (byte[]) results.get(3).getValue());
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> getMaskedSidechainParticipantsSize(BigInteger _sidechainId) {
        final Function function = new Function(FUNC_GETMASKEDSIDECHAINPARTICIPANTSSIZE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sidechainId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> MANAGEMENT_PSEUDO_SIDECHAIN_ID() {
        final Function function = new Function(FUNC_MANAGEMENT_PSEUDO_SIDECHAIN_ID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getUnmaskedSidechainParticipantsSize(BigInteger _sidechainId) {
        final Function function = new Function(FUNC_GETUNMASKEDSIDECHAINPARTICIPANTSSIZE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sidechainId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> commit(BigInteger _originatingSidechainId, BigInteger _crosschainTransactionId, byte[] param2) {
        final Function function = new Function(
                FUNC_COMMIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_originatingSidechainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_crosschainTransactionId), 
                new org.web3j.abi.datatypes.DynamicBytes(param2)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> getUnmaskedSidechainParticipant(BigInteger _sidechainId, BigInteger _index) {
        final Function function = new Function(FUNC_GETUNMASKEDSIDECHAINPARTICIPANT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sidechainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> getMaskedSidechainParticipant(BigInteger _sidechainId, BigInteger _index) {
        final Function function = new Function(FUNC_GETMASKEDSIDECHAINPARTICIPANT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sidechainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> unmask(BigInteger _sidechainId, BigInteger _index, BigInteger _salt) {
        final Function function = new Function(
                FUNC_UNMASK, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_sidechainId), 
                new org.web3j.abi.datatypes.generated.Uint256(_index), 
                new org.web3j.abi.datatypes.generated.Uint256(_salt)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public List<AddedSidechainEventResponse> getAddedSidechainEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ADDEDSIDECHAIN_EVENT, transactionReceipt);
        ArrayList<AddedSidechainEventResponse> responses = new ArrayList<AddedSidechainEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            AddedSidechainEventResponse typedResponse = new AddedSidechainEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._sidechainId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<AddedSidechainEventResponse> addedSidechainEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, AddedSidechainEventResponse>() {
            @Override
            public AddedSidechainEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ADDEDSIDECHAIN_EVENT, log);
                AddedSidechainEventResponse typedResponse = new AddedSidechainEventResponse();
                typedResponse.log = log;
                typedResponse._sidechainId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<AddedSidechainEventResponse> addedSidechainEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ADDEDSIDECHAIN_EVENT));
        return addedSidechainEventFlowable(filter);
    }

    public List<AddingSidechainMaskedParticipantEventResponse> getAddingSidechainMaskedParticipantEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ADDINGSIDECHAINMASKEDPARTICIPANT_EVENT, transactionReceipt);
        ArrayList<AddingSidechainMaskedParticipantEventResponse> responses = new ArrayList<AddingSidechainMaskedParticipantEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            AddingSidechainMaskedParticipantEventResponse typedResponse = new AddingSidechainMaskedParticipantEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._sidechainId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._participant = (byte[]) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<AddingSidechainMaskedParticipantEventResponse> addingSidechainMaskedParticipantEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, AddingSidechainMaskedParticipantEventResponse>() {
            @Override
            public AddingSidechainMaskedParticipantEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ADDINGSIDECHAINMASKEDPARTICIPANT_EVENT, log);
                AddingSidechainMaskedParticipantEventResponse typedResponse = new AddingSidechainMaskedParticipantEventResponse();
                typedResponse.log = log;
                typedResponse._sidechainId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._participant = (byte[]) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<AddingSidechainMaskedParticipantEventResponse> addingSidechainMaskedParticipantEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ADDINGSIDECHAINMASKEDPARTICIPANT_EVENT));
        return addingSidechainMaskedParticipantEventFlowable(filter);
    }

    public List<AddingSidechainUnmaskedParticipantEventResponse> getAddingSidechainUnmaskedParticipantEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ADDINGSIDECHAINUNMASKEDPARTICIPANT_EVENT, transactionReceipt);
        ArrayList<AddingSidechainUnmaskedParticipantEventResponse> responses = new ArrayList<AddingSidechainUnmaskedParticipantEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            AddingSidechainUnmaskedParticipantEventResponse typedResponse = new AddingSidechainUnmaskedParticipantEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._sidechainId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._participant = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<AddingSidechainUnmaskedParticipantEventResponse> addingSidechainUnmaskedParticipantEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, AddingSidechainUnmaskedParticipantEventResponse>() {
            @Override
            public AddingSidechainUnmaskedParticipantEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ADDINGSIDECHAINUNMASKEDPARTICIPANT_EVENT, log);
                AddingSidechainUnmaskedParticipantEventResponse typedResponse = new AddingSidechainUnmaskedParticipantEventResponse();
                typedResponse.log = log;
                typedResponse._sidechainId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._participant = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<AddingSidechainUnmaskedParticipantEventResponse> addingSidechainUnmaskedParticipantEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ADDINGSIDECHAINUNMASKEDPARTICIPANT_EVENT));
        return addingSidechainUnmaskedParticipantEventFlowable(filter);
    }

    public List<ParticipantVotedEventResponse> getParticipantVotedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PARTICIPANTVOTED_EVENT, transactionReceipt);
        ArrayList<ParticipantVotedEventResponse> responses = new ArrayList<ParticipantVotedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ParticipantVotedEventResponse typedResponse = new ParticipantVotedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._sidechainId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._participant = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._action = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._voteTarget = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse._votedFor = (Boolean) eventValues.getNonIndexedValues().get(4).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ParticipantVotedEventResponse> participantVotedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, ParticipantVotedEventResponse>() {
            @Override
            public ParticipantVotedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PARTICIPANTVOTED_EVENT, log);
                ParticipantVotedEventResponse typedResponse = new ParticipantVotedEventResponse();
                typedResponse.log = log;
                typedResponse._sidechainId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._participant = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._action = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._voteTarget = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse._votedFor = (Boolean) eventValues.getNonIndexedValues().get(4).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ParticipantVotedEventResponse> participantVotedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PARTICIPANTVOTED_EVENT));
        return participantVotedEventFlowable(filter);
    }

    public List<VoteResultEventResponse> getVoteResultEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(VOTERESULT_EVENT, transactionReceipt);
        ArrayList<VoteResultEventResponse> responses = new ArrayList<VoteResultEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            VoteResultEventResponse typedResponse = new VoteResultEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._sidechainId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._action = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._voteTarget = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._result = (Boolean) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<VoteResultEventResponse> voteResultEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, VoteResultEventResponse>() {
            @Override
            public VoteResultEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(VOTERESULT_EVENT, log);
                VoteResultEventResponse typedResponse = new VoteResultEventResponse();
                typedResponse.log = log;
                typedResponse._sidechainId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._action = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._voteTarget = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._result = (Boolean) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<VoteResultEventResponse> voteResultEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(VOTERESULT_EVENT));
        return voteResultEventFlowable(filter);
    }

    public List<Dump1EventResponse> getDump1Events(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DUMP1_EVENT, transactionReceipt);
        ArrayList<Dump1EventResponse> responses = new ArrayList<Dump1EventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            Dump1EventResponse typedResponse = new Dump1EventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.a = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.b = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.c = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<Dump1EventResponse> dump1EventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, Dump1EventResponse>() {
            @Override
            public Dump1EventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(DUMP1_EVENT, log);
                Dump1EventResponse typedResponse = new Dump1EventResponse();
                typedResponse.log = log;
                typedResponse.a = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.b = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.c = (String) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<Dump1EventResponse> dump1EventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DUMP1_EVENT));
        return dump1EventFlowable(filter);
    }

    public List<Dump2EventResponse> getDump2Events(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(DUMP2_EVENT, transactionReceipt);
        ArrayList<Dump2EventResponse> responses = new ArrayList<Dump2EventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            Dump2EventResponse typedResponse = new Dump2EventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.a = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.b = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.c = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.d = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<Dump2EventResponse> dump2EventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, Dump2EventResponse>() {
            @Override
            public Dump2EventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(DUMP2_EVENT, log);
                Dump2EventResponse typedResponse = new Dump2EventResponse();
                typedResponse.log = log;
                typedResponse.a = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.b = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.c = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.d = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<Dump2EventResponse> dump2EventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DUMP2_EVENT));
        return dump2EventFlowable(filter);
    }

    @Deprecated
    public static CrosschainCoordinationV1 load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new CrosschainCoordinationV1(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static CrosschainCoordinationV1 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new CrosschainCoordinationV1(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static CrosschainCoordinationV1 load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new CrosschainCoordinationV1(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static CrosschainCoordinationV1 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new CrosschainCoordinationV1(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<CrosschainCoordinationV1> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _votingAlg, BigInteger _votingPeriod) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _votingAlg), 
                new org.web3j.abi.datatypes.generated.Uint32(_votingPeriod)));
        return deployRemoteCall(CrosschainCoordinationV1.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<CrosschainCoordinationV1> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _votingAlg, BigInteger _votingPeriod) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _votingAlg), 
                new org.web3j.abi.datatypes.generated.Uint32(_votingPeriod)));
        return deployRemoteCall(CrosschainCoordinationV1.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<CrosschainCoordinationV1> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _votingAlg, BigInteger _votingPeriod) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _votingAlg), 
                new org.web3j.abi.datatypes.generated.Uint32(_votingPeriod)));
        return deployRemoteCall(CrosschainCoordinationV1.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<CrosschainCoordinationV1> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _votingAlg, BigInteger _votingPeriod) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _votingAlg), 
                new org.web3j.abi.datatypes.generated.Uint32(_votingPeriod)));
        return deployRemoteCall(CrosschainCoordinationV1.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static class AddedSidechainEventResponse extends BaseEventResponse {
        public BigInteger _sidechainId;
    }

    public static class AddingSidechainMaskedParticipantEventResponse extends BaseEventResponse {
        public BigInteger _sidechainId;

        public byte[] _participant;
    }

    public static class AddingSidechainUnmaskedParticipantEventResponse extends BaseEventResponse {
        public BigInteger _sidechainId;

        public String _participant;
    }

    public static class ParticipantVotedEventResponse extends BaseEventResponse {
        public BigInteger _sidechainId;

        public String _participant;

        public BigInteger _action;

        public BigInteger _voteTarget;

        public Boolean _votedFor;
    }

    public static class VoteResultEventResponse extends BaseEventResponse {
        public BigInteger _sidechainId;

        public BigInteger _action;

        public BigInteger _voteTarget;

        public Boolean _result;
    }

    public static class Dump1EventResponse extends BaseEventResponse {
        public BigInteger a;

        public BigInteger b;

        public String c;
    }

    public static class Dump2EventResponse extends BaseEventResponse {
        public BigInteger a;

        public BigInteger b;

        public BigInteger c;

        public BigInteger d;
    }
}
